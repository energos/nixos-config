# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/profiles/qemu-guest.nix")
    ];

  boot.initrd.availableKernelModules = [ "ahci" "virtio_pci" "xhci_pci" "sr_mod" "virtio_blk" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/321a3c70-5eed-4cb3-b5a7-c7d84f3f74ad";
      fsType = "ext4";
      options = [ "noatime" ];
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/67E3-3F52";
      fsType = "vfat";
    };

  fileSystems."/home/vmsf/Depot" =
    { device = "Depot";
      fsType = "virtiofs";
      options = [ "rw" "noatime" "_netdev" ];
      noCheck = true;
    };
  fileSystems."/home/vmsf/Energos" =
    { device = "Energos";
      fsType = "virtiofs";
      options = [ "rw" "noatime" "_netdev" ];
      noCheck = true;
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/9d5b2ceb-168a-4a7a-8642-d9558fbf9a28"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
